from pwn import *

def start(argv=[], *a, **kw):
    if args.GDB:  # Set GDBscript below
        return gdb.debug([exe] + argv, gdbscript=gdbscript, *a, **kw)
    elif args.REMOTE:  # ('server', 'port')
        return remote(sys.argv[1], sys.argv[2], *a, **kw)
    else:  # Run locally
        return process([exe] + argv, *a, **kw)


gdbscript = '''
    b CodegenVisitor::visitCall 
    continue
'''.format(**locals())
context.log_level = 'debug'


exe = '/home/lmz/WPL/build/bin/wplc'
elf = context.binary = ELF(exe, checksec=False)

#code = 'int func program() {int a <- 3; select {a = 0: a <- 0; a < 0: a <- -1;} return a;}'
#code = 'int func getGrade(int sid) { return 100; } int func program() { int a; a <- getGrade(666); return a;}'
#code = 'int func getGrade(int sid) { int a; a <- sid; return 100; }'
#code = 'int func getGrade(int sid) { int a; a <- sid; return 100; }'
#code = 'extern int func getGrade(int sid); int func main() {getGrade(10, 11, 12); return 0;}'
#params = ['--nocode', '-s', 'str s <- "hello/\n";']
file = '/home/lmz/WPL/test/testdata/A6.wpl'
params = ['--nocode',  '-p', file]
#params = ['--nocode',  '-p', '-s', 'str s <- "hello";']

io = start(params)
#io.interactive()
io.wait()

